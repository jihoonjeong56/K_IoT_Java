package org.example.test0710;

public class 자바기초용어모음 {
}
/*
     접근제한자
     : 클래스, 변수, 메서드 앞에 붙어 각각 다른 클래스, 메서드 에서 사용할때
     어떤 접근 제한자에 따라 허용되는 범위를 제한하는 키워드

     public : 접근 범위 제한 없음
     protected : 같은 패키지 내에 상속받은 클래스에 한에서 접근 가능
     default : 같은 파일 내에서 접근 가능 상속시 오버라이딩 됨
     private : 같은 클래스 내에서만 접근 가능 다른 클래스의 경우 오버라이딩 후
     super 키워드를 통해 부모 클래스를 호출 가능

     static
     : 정적이라는 의미

     static 변수:
     static 메서드:

     final
     : 한번 정해지면 더 이상 변경되지 않는다는 의미, 각 변수, 메서드, 클래스에 따라 각각에 맞춰 성질이 조금씩 달라짐
     final 변수: 변수 선언시 더이상 변경되지않는 상수로 정의;
     final 메서드 : 변경되지 않기 때문에 오버라이딩을 되지 않음
     final 클래스: 더이상 상속되지 않음

     super vs this
     this: 한클래스 내의 전역변수가 선언 되었을때 메서드 내의 지역변수명과 전역변수 명이 동일할 경우 지역변수를 구별하기 위해 사용
     (지역변수명과 전역변수 명이 다를시 사용 안해도 됨)
     super: 부모 클래스의 메서드를 오버라이딩 하였을 시 자식 클래스 메서드에서 부모클래스 메서드를 호출하기 위해 사용.

     오버로딩(Overloading) VS 오버라이딩(Overriding)
     오버로딩: 부모 클래스의 메서드를 불렀을때 매개변수의 개수 혹은 반환형이 달라져야함 (재할당)
     오버라이딩: 부모 클래스의 메서드를 불렀을때 매개변수 개수 등을 변경할수 는 없지만 매서드 내의 결과를 자식 클래스에 맞추어 다시 정의가능
     (재정의)

     abstract(추상화)
     : 완전하지 않게 구현된, 틀만 짜여진 형태. 이를 바당으로 여러 클래스들이 상속 받아 정해진 틀에서 각 클래스의 특성에 맞추어
     추가 구현 할 수 있음;
     abstract 클래스: 클래스를 만들어 메서드, 변수 의 접근 제한 등을 선언만 해놓고 상속받은 자식클래스에서 나머지를 구현해주어야함
     abstract 메서드: 메서드 선언후 구현부는 구현하지 않음, 자식 클래스에서 오버라이딩을 통해 재정의 하여 구현.

     interface VS abstract class
     interface: 클래스에서 행할 행동을 정의. 여러 행동 메서드를 정의하여 클래스에서 확장하여 사용
     abstract class : 추상 클래스는 다른 클래스들의 큰 집합으로 표현. 다른 클래스들의 공통적으로 들어갈 메서드의 구현부를 제외하고 선언후,
     다른 클래스에서는 이를 상속받아 공통된 메서드의 경우 재정의 하여 사용.

     extends vs implements
     extends: 확장하다의 의미 부모 클래스를 자식클래스가 상속 받아 사용 할때 사용.
     implements: 적용의 의미. 각 클래스들의 여러 행동들을 interface에 정의 내려놓은 후 이를 implements로 적용하여 메서드 사용

     try-catch-finally
     try: 예외가 발생 할 가능성이 있는 코드 실행 부분. 제어문 if와 유사. 코드의 예외가 발생할 경우 catch 문으로 넘어감
     catch: try 에서 발생 한 예외를 받아 런타임 오류가 나지않게 오류 부분을 할당 받아 코드 자체는 돌아가게 적용
     finally: 예외 처리이후 마지막으로 이루어져야 할 구문을 시행.
 */